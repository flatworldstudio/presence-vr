// CLIENT STORIES.

#presenceclient
debugon
amvrclient
start moodlight
start serversearch
alignset
addkinectnull
addhandnulls
//autocalibrate
//moodon
end

// Serversearch waits for server and launches #foundserver.

#serversearch
startdiscover
listenforserver
end

// Foundserver starts a client and monitors the connection. If connection is lost it launches #serverlost.

#foundserver
startclient
monitorconnection
end

// Serverlost responds to losing connection and then launches (back into) #serversearch.

#serverlost
moodoff
stop userstreaming
stop clientcalibration
lostconnection
start serversearch
end

// SERVER STORIES.

// io dev

#serverio
debugon
makeservercontrols
makefoldermenu
makefilemenu
amserver
start servercontrols
start moodlight
end

#togglebrowser
togglebrowser
end

#folder
setfolder
makefilemenu
end

#file
setfile
end

#newfile
makenewfile
makefilemenu
end

#newfolder
makenewfolder
makefoldermenu
makefilemenu
end


// Main story

#presenceserver
debugon
amserver
start server
displaycheck
//initstream
alignset
addkinectnull
addviewernulls
makeservercontrols
makefoldermenu
makefilemenu
//createclouds
start servercontrols
start moodlight
//setsession
end

// Server starts server and waits and calls #newclient when a client connects.

#server
startserver
listenforclients
end

// Newclient. Passglobal reviews all storypointers and marks the global ones as modified so they get pushed to clients.

#newclient
passglobal
end

// Servercontrols handles server UI.

#servercontrols
servercontrol
end

// Startpresence starts the kinect (if possible) and begins streaming user info (not points). Then it triggers the client to calibrate. 
// When calibrated the client triggers #clientcalibrated.

#startpresence
depthlive
start userstreaming
waitforuser
pause3
start clientcalibration
end

#clientcalibration
isglobal
autocalibrate
end

// Clientcalibrated is called when the client is calibrated

#clientcalibrated
stop clientcalibration
isglobal
moodon
detectgesture
end

// Stoppresence stops the kinect if needed and stops userstreaming.

#stoppresence
depthoff
moodoff
stop startpresence
stop userstreaming
stop clientcalibration
end

// 

#beginrecording
record
makefilemenu
end

// GENERAL STORIES

// Moodlight controls ambient lighting. It runs either locally or globally with the server controlling the lights.

#moodlight
isglobal
moodlight
end

// Userstreaming streams users head and hands to client and streams back head rotation.

#userstreaming
isglobal
userstream
end


// LEGACY STORIES.


#play
debugon
amserver
initstream
createsinglecloud
depthplayback
depthcompress
end

//#record
debugon
amserver
createsinglecloud
depthrecord
recorddepth
end

#transferserver
debugon
amserver
initstream
start server
start transfertest
end

#transfertest
isglobal
transfertest
end

#transferclient
debugon
amvrclient
initstream
start serversearch
end



#presenceserverold
debugon
amserver
displaycheck
initstream
alignset
addkinectnull
addviewernulls
makeservercontrols
createclouds
start servercontrols
start server
setsession
end



#startlive
startspatialdata
setmodetopreview
start cloudstreaming
start userstreaming
end

#startliveSESSION
startspatialdata
setmodetopreview
start cloudstreaming
start userstreaming
waitforuser
start startsession
sessiontimer
setmodetopreview
end


#cloudstreaming
isglobal
cloudstream2
end



#resetclouds
isglobal
resetclouds
end


#startmirror
startspatialdata
setmodetopreview
start cloudstreaming
start userstreaming
waitforuser
setmodetomirror
start startsession
sessiontimer
setmodetopreview
end

#startecho
startspatialdata
setmodetopreview
start cloudstreaming
start userstreaming
waitforuser
start startsession
setmodetoecho
sessiontimer
setmodetopreview
end

#stopsession
stop startecho
stop startmirror
stop startlive
stop cloudstreaming
stop userstreaming
stopspatialdata
start resetclouds
end

#startsession
isglobal
playsignal
setsession
captureframezero
end




#presenceclientold
debugon
amvrclient
initstream
alignset
addkinectnull
addhandnulls
createclouds
createviewvr
start serversearch
start vrcalibration
end






#vrcalibration
checkforcalibration
end


















#servermain
debugon
start server
start serverview
end

#streamuser
streamuser
end


#serverview
createoverview
overviewinterface
end




#cloud
createcloud
kinectcloud
end




#presencelive
isglobal
createcloud

end



#clientmain
debugon
start serversearch
end








#serverplayback
debugon
dummykinect
createoverview
placeset
setdebug
viewerdebug
start userinterface
start playsequence
end

#servercapture
debugon
startkinect
createoverview
placeset
setdebug
viewerdebug
start userinterface
start cloud
start server
start capture
end


#capture
waitforposition
capture
savecapture
stop cloud
loadsequence
playsequence
end

#playsequence
createsinglecloud
loadsequenceresource
playsequence
end


#clienttest
debugon
networkguion
createview
dummykinect
placekinect
setdebug
start userinterface
start serversearch
end


#clientvrplayback
createviewvr
dummykinect
placekinect
setdebug
handdebug
start vrcalibration
start userinterface
start playsequence
start serversearch
end


#clientvr
createviewvr
dummykinect
placekinect
setdebug
handdebug
start vrcalibration
start userinterface
start cloud
start serversearch
end



#calibrate
calibrate
end



#foundserver2
stop userinterface
stop cloud
startclient
monitorconnection
end



#userinterface
interfaceactive
end






#screentap
toggleview
end